% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_MC_CW_IRSL_TUN.R
\name{run_MC_CW_IRSL_TUN}
\alias{run_MC_CW_IRSL_TUN}
\title{Run Monte-Carlo simulation for CW-IRSL}
\usage{
run_MC_CW_IRSL_TUN(A, rho, times, clusters = 10, r_c = 0,
  delta.r = 0.1, N_e = 200, method = "seq", output = "signal", ...)
}
\arguments{
\item{A}{\link{numeric} (\strong{required}): The optical excitation rate from ground state of trap to excited state of trap (s^-1).}

\item{rho}{\link{numeric} (\strong{required}): The density of recombination centers (defined as rho' in Huntley 2006) (unitless).}

\item{times}{\link{numeric} (\emph{with default}): The sequence of temperature steps within the simulation (s).}

\item{clusters}{\link{numeric} (\emph{with default}): The number of MC runs (unitless).}

\item{r_c}{\link{numeric} (\emph{with default}): The retrapping ratio.}

\item{delta.r}{\link{numeric} (\emph{with default}):}

\item{N_e}{\link{numeric} (\emph{width default}): The total number of electron traps available (unitless).}

\item{method}{\link{character} (\emph{with default}): sequential \code{'seq'} or parallel processing \code{'par'}}

\item{output}{\link{character} (\emph{with default}): output is either the \code{'signal'} (the default) or \code{'remaining_e'} (the remaining
charges, electrons, in the trap)}

\item{\dots}{further arguments}

\item{r}{\link{numeric} (\emph{with default}): The radius of tunneling (unitless).}
}
\value{
This function returns a list.
}
\description{
Runs a Monte-Carlo (MC) simulation of constant wave infrared stimulated luminesence (CW-IRSL) using the model. Tunneling refers to the direct movement of electrons from a trap directly to the recombination center.
}
\details{
\deqn{
p(t) = A * e^{(-r' / \rho^{(-1 / 3)})}
}

\deqn{
I_{TUN}(t) = 3 * n * p(t) *  (r')^2 * e^{(-r'^3)}
}

Where in the function: \cr
\code{p(t)} := The experimental stimulation mode \cr
\code{e}:= Exponentional function \cr
r' := \code{r} \cr
\eqn{\rho}' := \code{rho} \cr
\code{t} := \code{Time} \cr
\code{n} := The Instantaneous number of electrons
}
\section{Function version}{
 0.2.0
}

\examples{
\dontrun{

##============================================================================##
## Example 1: Simulate CW-IRSL measurement
##============================================================================##

run_MC_CW_IRSL_TUN(
A = 1,
clusters= 500,
rho = 1e-4,
N_e = 1E4,
r_c = 2,
times = 0:500,
delta.r = 1e-1,
method = "seq"
)) \%>\% plot_RLumCarlo(norm = T, legend = T)
}
} 

\section{How to cite}{
Friedrich, J., Kreutzer, S., 2019. run_MC_CW_IRSL_TUN(): Run Monte-Carlo simulation for CW-IRSL. Function version 0.2.0. In: Friedrich, J., Kreutzer, S., Pagonis, V., Schmidt, C., 2019. RLumCarlo: Monte-Carlo Methods for Simulating Luminescence PhenomenaR package version 0.1.0.9000-101. 
}

\references{
Huntley, D.J., 2006. An explanation of the power-law decay of luminescence. Journal of Physics: Condensed Matter, 18(4), 1359.\doi{10.1088/0953-8984/18/4/020}

Pagonis, V., Friedrich, J., Discher, M., Müller-Kirschbaum, A., Schlosser, V., Kreutzer, S., Chen, R. and Schmidt, C., 2019. Excited state luminescence signals from a random distribution of defects: A new Monte Carlo simulation approach for feldspar. Journal of Luminescence 207, 266–272. \doi{10.1016/j.jlumin.2018.11.024}

Reuven, C. and S. Mckeever, 1997. Theory of thermoluminescence and related phenomena.
}
\author{
Johannes Friedrich, University of Bayreuth (Germany), Sebastian Kreutzer, IRAMAT-CRP2A, UMR 5060, Université Bordeaux Montaigne (France)
}
